---
title: "TT_2024_09_17"
format: html
editor: visual
---

## Loading and Preparation

```{r}
library(tidytuesdayR)
library(dplyr)
library(ggplot2)

tuesdata <- tidytuesdayR::tt_load('2024-09-17')

main<-tuesdata$romeo_juliet
table(main$character)

character_grouping<-main%>%
  distinct(character)%>%
  bind_cols(c(
    "Leftovers",
    "Stage Direction",
    "Servants",
    
    "Servants",
    "Servants",
    "Montagues",
    
    "Capulets",
    "Leftovers",
    "Capulets",
    
    "Capulets",
    "Montagues",
    "Montagues",
    
    "Other Nobles",
    "Romeo",
    "Other Nobles",
    
    "Servants",
    "Servants",
    "Juliet",
    
    "Other Nobles",
    "Servants",
    "Servants",
    
    "Capulets",
    "Holymen",
    "Servants",
    
    "Leftovers",
    "Leftovers",
    "Leftovers",
    
    "Leftovers",
    "Servants",
    "Leftovers",
    
    "Holymen",
    "Leftovers",
    "Leftovers",
    
    "Leftovers",
    "Leftovers"
  ))%>%
  bind_cols(c(
    "none",
    "none",
    "m",
    
    "m",
    "m",
    "m",
    
    "m",
    "a",
    "m",
    
    "f",
    "m",
    "f",
    
    "m",
    "m",
    "m",
    
    "a",
    "f",
    "f",
    
    "m",
    "a",
    "a",
    
    "a",
    "m",
    "m",
    
    "a",
    "a",
    "a",
    
    "a",
    "m",
    "a",
    
    "m",
    "a",
    "a",
    
    "a",
    "a"
  ))

for_fig<-main%>%
  #filter(is.na(lag(character))|lag(character)!=character)%>%#wanted to make figure less cluttered, but it's unnecessary
  mutate(
    act_change=case_when(
      is.na(act)~FALSE,
      is.na(lag(act))~FALSE,
      act==lag(act)~FALSE,
      TRUE~TRUE
    ))%>%
  left_join(
    character_grouping%>%
      rename(
        group='...2',
        gender="...3"
        )
    )%>%
  select(group,gender,act_change)%>%
  mutate(
    order=row_number(),
    group=factor(group,levels=c(
      "Stage Direction", "Romeo","Juliet","Montagues","Capulets", "Other Nobles", "Holymen", "Servants","Leftovers"))
    )

```

## Plotting

```{r}

fig<-for_fig%>%
  ggplot(aes(y=-order,x=group,col=gender))+
    geom_hline(
    data = for_fig%>%filter(act_change),
    aes(yintercept = -order),
    col="white"
    )+
  #geom_hline(yintercept = 0,col="white",linewidth=2)+#doesnt work well with arrow
  geom_jitter(height = 0,width = 0.1,shape=18)+
  theme_minimal()+
  scale_y_continuous(NULL,breaks = NULL)+
  scale_x_discrete(NULL)+
  theme(
    plot.background = element_rect(fill="#a78E1B"),
    legend.position = "none",axis.text = element_text(color="black")
    )+
  scale_color_manual(
    values = c(
      "none"="white",
      "f"="#89374F",
      "m"="#166C72",
      "a"="white"#most changed line in script. Struggled with picking a good colour for 'ambiguous', so white it is
      ))+
  ggtitle("Who Speaks When?\n(a #TidyTuesday about Romeo and Juliet)")+
  geom_segment(
    data = for_fig%>%distinct(group)%>%filter(group=="Capulets"),
    aes(
      x=group,
      y=5,
      yend=15,
      col="white"
      ),
    arrow = arrow(ends="first", type = "closed"),color="white")

ggsave(
  plot = fig,
  device = "png",
  dpi=300,
  units = "cm",
  width = 18,
  height = 23,
  filename = "fig_09_17.png")
```
